import { BalConfigState } from '../../config';
import { Mask } from '../mask-interfaces';
import { MaskAttributes, MaskComponent, MaskComponentAdapterType } from './mask-component-interfaces';
export declare class MaskComponentAdapter implements MaskComponentAdapterType {
  private mask;
  private component;
  private resetHandlerTimer?;
  constructor(mask: Mask);
  get attributes(): MaskAttributes;
  bindComponent(component: MaskComponent): void;
  bindComponentDidLoad(): void;
  bindConfigChanged(config: BalConfigState): void;
  bindValueChanged(newValue?: string | undefined, oldValue?: string | undefined): void;
  bindKeyDown(event: KeyboardEvent): void;
  bindFocus(event: FocusEvent): void;
  bindBlur(event: FocusEvent): void;
  bindPaste(event: ClipboardEvent): void;
  bindFormReset(event: UIEvent): void;
  bindClick(event: MouseEvent): void;
  bindHostClick(event: MouseEvent): void;
  bindGlobalClick(event: MouseEvent): void;
  private get isComponentAccessible();
}
