import { ComponentInterface, EventEmitter } from '../../../stencil-public-runtime';
import { FormInput } from '../../../utils/form-input';
import { BalConfigObserver, BalConfigState, BalLanguage, BalRegion } from '../../../utils/config';
import { BalAriaForm, BalAriaFormLinking } from '../../../utils/form';
import { LogInstance, Loggable } from '../../../utils/log';
export declare class InputStepper implements ComponentInterface, BalConfigObserver, FormInput<number | undefined>, BalAriaFormLinking, Loggable {
  private inputId;
  private inheritedAttributes;
  private decreaseHasFocus;
  private increaseHasFocus;
  nativeInput?: HTMLInputElement;
  el: HTMLElement;
  focused: boolean;
  language: BalLanguage;
  region: BalRegion;
  ariaForm: BalAriaForm;
  log: LogInstance;
  createLogger(log: LogInstance): void;
  name: string;
  min: number;
  max: number;
  steps: number;
  disabled: boolean;
  readonly: boolean;
  invalid: boolean;
  debounce: number;
  protected debounceChanged(): void;
  value: number;
  private initialValue;
  balChange: EventEmitter<BalEvents.BalInputStepperChangeDetail>;
  balInput: EventEmitter<BalEvents.BalInputStepperInputDetail>;
  balIncrease: EventEmitter<BalEvents.BalInputStepperIncreaseDetail>;
  balDecrease: EventEmitter<BalEvents.BalInputStepperDecreaseDetail>;
  balFocus: EventEmitter<BalEvents.BalInputStepperFocusDetail>;
  balBlur: EventEmitter<BalEvents.BalInputStepperBlurDetail>;
  listenOnClick(ev: UIEvent): void;
  resetHandler(ev: UIEvent): void;
  connectedCallback(): void;
  componentWillLoad(): void;
  configChanged(state: BalConfigState): Promise<void>;
  getInputElement(): Promise<HTMLInputElement | undefined>;
  setAriaForm(ariaForm: BalAriaForm): Promise<void>;
  increase(): void;
  decrease(): void;
  private onFocusDecrease;
  private onFocusIncrease;
  private onFocus;
  private onBlurDecrease;
  private onBlurIncrease;
  private onBlur;
  render(): any;
}
